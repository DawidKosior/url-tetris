declare module 'tetris-engine' {
  enum GAME_STATUS {
    INIT = 0,
    WORK = 1,
    PAUSE = 2,
    OVER = 3
  }

  export type CssClass = string | null;
  export type Cell = { val: number };
  export type Row = Cell[];
  export type Grid = Row[];
  export type GameStatistic = {
    countDoubleLinesReduced: number;
    countLinesReduced: number;
    countQuadrupleLinesReduced: number;
    countShapesFalled: number;
    countShapesFalledByType: {};
    countTrippleLinesReduced: number
  };
  export type GameState = {
    gameStatus: GAME_STATUS;
    statistic: GameStatistic;
    body: Grid;
  }

  export class Engine {
    start: () => any;
    moveUp: () => any;
    moveLeft: () => any;
    moveDown: () => any;
    moveRight: () => any;
    rotateBack: () => any;
    rotate: () => any;

    constructor(areaHeight: number,
                areaWidth: number,
                onUpdate: (gameState: GameState) => any,
                defaultHeap: number[][]) {
    }
  };
}

declare module 'braille-encode' {
  export function encode(buf: Buffer): string;
}
